구현 idea 종류:
- random access
- 이전 상태 기억해두는 변수 이용
- 특정 조건 만족할 때마다 flush! (마지막 덩어리 조심!)
- 중복된 값은 내부 반복문으로 warp 및 skip!
- dfs(backtracking) 구현 핵심: root 노드로부터 가능한 모든 서브 트리 순회 후 return 및 backtracking
- 절대성보다 상대성이 중요할 때 전제 좌표계 회전 고려 (ex. 방향) 


-----------------------------------------------------------------------------------------------
진법 변환:
- random access에 적절한 자료형 변환
- 이전 상태(power) 기억해두기

이진 탐색:
- 이전 상태(ans) 기억해두기

compress:
- 이전 상태(prev, cnt) 기억해두기
- 특정 조건 불일치 시, flush! (반드시 마지막 덩어리는 별도 flush 필요 O)

gcd:
- 이전 상태(b값) 기억해두기

투 포인터:
- 중복된 값은 내부 반복문으로 warp! 
- 이전 상태(l_val, r_val) 기억해두기

순열 생성:
- dfs(백트래킹) 구현 핵심: root 노드로부터 생성가능한 모든 서브 트리 순회 후 return 및 backtracking!




tip!) 절대적인 값이 아닌 '상대성'만 필요하다면, 전체 좌표계를 회전시키는 것이 더 편함.
ex) 방향




주의!) 항상 헷갈리는 인덱스 부분: 0(초기 단계 이전의 무), 1(초기 단계)
0 -> 완전히 없는 무에서 시작할 때,  --- ex) 투 포인터 (내부 이중 반복문으로 순서를 조정할 수 O)
1 -> 초기 상태부터 시작할 때,   --- ex) compress, 진법 변환
